@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
@if (User.Identity?.IsAuthenticated == true)
{
    <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle text-light" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
            <i class="bi bi-person-circle"></i> 
            @(User.FindFirstValue("FullName") ?? User.Identity?.Name ?? "User")
        </a>
        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">
            <li>
                <a class="dropdown-item" asp-controller="Account" asp-action="Profile">
                    <i class="bi bi-person me-2"></i>Profile
                </a>
            </li>
            @if (!string.IsNullOrEmpty(User.FindFirstValue("Department")))
            {
                <li>
                    <span class="dropdown-item-text text-muted">
                        <i class="bi bi-building me-2"></i>@User.FindFirstValue("Department")
                    </span>
                </li>
            }
            <li><hr class="dropdown-divider"></li>
            <li>
                <form asp-controller="Account" asp-action="SignOutPost" method="post" class="dropdown-item p-0 m-0">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-link dropdown-item text-danger">
                        <i class="bi bi-box-arrow-right me-2"></i>Sign Out
                    </button>
                </form>
            </li>
        </ul>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-light" asp-controller="Account" asp-action="SignIn">
            <i class="bi bi-box-arrow-in-right"></i> Sign In
        </a>
    </li>
}
</ul>
